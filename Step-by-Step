# OS-install-on-external-HD
Configure the BIOS:
Restart your computer. While it is booting up, hold or keep pressing the delete or F12 or F3 or etc button.
You are now in the BIOS configuration menu.
Select the boot menu:
Make sure your BIOS/UEFI is set to boot in UEFI mode.
Take a picture of the boot options numbered 1 - 5 (You need to change it back or if you do not change back, remove the USB flash drive every time you boot your computer)
Change #1 Boot option to Flash or USB so your computer can boot up using the USB stick             

Locate your disk or External HD:
lsblk    (This command will list block devices) 
Output:
sda      8:0    0 388.4M  1 disk
sdb      8:16   0   186M  1 disk
sdc      8:32   0     8G  0 disk [SWAP]
sdd      8:48   0     1T  0 disk /mnt/wslg/distro
                                 /
sde      8:64   0   4.8T  0 disk   (/dev/sde is my external HD)

On /dev/sdx follow the steps (!!! The: x : is replaced by the letter of your external HD) 

Another thing, we are about to create our partitions with filesystem types on the external HD disk 
manually using WLS2 or Linux OS; however, the partitions and filesystem types can be created manually 
or automatically durning Linux OS installation (We can create everything when we install Rocky Linux 10). 
If you want to install Linux OS automatically or create partitions and filesystem types (A bit more easier)  
during installation setup then...  

Scroll down and look for this note:
!!!!!!!!!!!You want to create just install Rocky Linux or you want to manully create partition and   
           filesystem type use durning installion. If you already create partition and filesystem,  
           please continue below as well.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Everyone else continue Step-by-Step.
If needed, backup all information on external HD.


Step-by-Step
Wipe existing partition table clean:
sudo wipefs -a /dev/sdx     (!!!Replace the: x : in sdx... I have to use: sudo wipefs -a /dev/sde: 
                              Because my external HD or disk is sde)
Output:
/dev/sde: 8 bytes were erased at offset 0x00000200 (gpt): 45 46 49 20 50 41 52 54
/dev/sde: 8 bytes were erased at offset 0x48c61b35c00 (gpt): 45 46 49 20 50 41 52 54
/dev/sde: 2 bytes were erased at offset 0x000001fe (PMBR): 55 aa
/dev/sde: calling ioctl to re-read partition table: Success
sudo parted /dev/sdx mklabel gpt     (UEFI is designed to work with GPT)
Output: Information: You may need to update /etc/fstab.  (Do not worry about /etc/fstab because this is about 
                                                          auto mount filesystems at boot)

Create UEFI System Partition (ESP).
The parted command helps us manipulate the disk:
sudo parted /dev/sdx                  (We are inside the disk)
unit MiB                              (Set display units)
mkpart ESP fat32 1MiB 513MiB          (Partition space needed for /boot/efi)
set 1 esp on                          (Partition sdx to sdx1 which means sdx1 is a separate space in disk sdx)
 
Create /boot partition:
mkpart primary ext4 513MiB 1025MiB       (Partition space needed for kernel & initramfs)

Create LVM Physical Volume:
mkpart primary 1025MiB 100%       (Use the rest of disk space for our Logical Volume Manager or LVM)
set 3 lvm on

Check partition layout:
print
Output:
Model: Seagate Portable (scsi)      (External HD name)
Disk /dev/sde: 4769307MiB           (4.7TB of disk space in MiB)
Sector size (logical/physical): 512B/4096B
Partition Table: gpt                (Using the lates partition organizer vs mbr)
Disk Flags:
Number  Start    End         Size        File system  Name     Flags
 1      1.00MiB  513MiB      512MiB      fat32        ESP      boot, esp
 2      513MiB   1025MiB     512MiB      ext4         primary
 3      1025MiB  4769307MiB  4768282MiB               primary  lvm


Quit parted command:
quit

Now check your disk space or block:
lsblk
Output:
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINTS
sda      8:0    0 388.4M  1 disk
sdb      8:16   0   186M  1 disk
sdc      8:32   0     8G  0 disk [SWAP]
sdd      8:48   0     1T  0 disk /mnt/wslg/distro
                                 /
sde      8:64   0   4.5T  0 disk     (Created parted disk below)
├─sde1   8:65   0   512M  0 part     (Will be used for /boot/efi)
├─sde2   8:66   0   512M  0 part     (Will be used for kernel & initramfs)
└─sde3   8:67   0   4.5T  0 part     (Will be used for LVM. Think of LVM similar to a bookshelf or book manager)


Format the Partitions (We are creating/setting the filesystems on our LVM's partitions).
Format the UEFI System Partition:
sudo mkfs.fat -F32 /dev/sdx1

Format the /boot partition:
sudo mkfs.xfs /dev/sdx2

Set up the LVM Physical Volume (Logical Volume Manager (LVM) tool has it's own built-in utilities 
                                or commands like pvcreate, vgcreate, lvcreate, etc.).
Install LVM tools:
sudo apt install lvm2

Create a Physical Volume:
sudo pvcreate /dev/sdx3     (Initialize the disk or partition to use for LVM)

Create a Volume Group:
sudo vgcreate vg_external /dev/sdx3          (Think book cover with title)

Set Up Swap on LVM
sudo mkswap /dev/vg_external/lv_swap
sudo swapon /dev/vg_external/lv_swap         (Initialize it)


Install ZFS	       (This part is optional)
sudo apt install zfsutils-linux


Create a ZFS Pool for recovery/backup
sudo zpool create recovery_pool /dev/vg_external/lv_recovery && sudo zfs create recovery_pool/backup_data
Enable compression	(Optional)
sudo zfs set compression=lz4 recovery_pool

Create Logical Volumes as needed. These are the important ones:
sudo lvcreate -L 50G -n lv_root vg_external   (Think page with it's chapter title inside book cover)
sudo lvcreate -L 80G  -n lv_var vg_external   (Think page with it's chapter title inside book cover)
sudo lvcreate -L 50G  -n lv_tmp vg_external   (Think page with it's chapter title inside book cover)
sudo lvcreate -L 500G -n lv_home vg_external  (Think page with it's chapter title inside book cover)


Format the logical volume (Now we are creating the filesystem for our lvm):
sudo mkfs.xfs /dev/vg_external/lv_root
sudo mkfs.xfs /dev/vg_external/lv_var
sudo mkfs.xfs /dev/vg_external/lv_tmp
sudo mkfs.xfs /dev/vg_external/lv_home

Now check disk:
lsblk -f              (The -f will show more info such as LABEL, UUID, FSAVAIL, FSUSE%, FSType, and MOUNTPOINTS. FS means File System)
Output:
sde
├─sde1  vfat   FAT32       A8A4-C070
├─sde2  ext4   1.0         42e3dfe1-8fc4-4b3c-bb52-559e92f768af
└─sde3  LVM2_m LVM2        tT2hxn-2HoH-LUDB-lUMi-b91l-bH8B-Blbaw8
  ├─vg_external-lv_root
  │     xfs   1.0         27b347c9-6a9d-4321-9b6f-33ff727b1778
  ├─vg_external-lv_swap
  │     xfs   1.0         2db480b6-f456-4027-ad5b-718d37e6e4a4
  ├─vg_external-lv_var
  │     xfs   1.0         1cdced7d-b8a3-4dad-87dc-d208c48bd481
  ├─vg_external-lv_tmp
  │     xfs   1.0         957e5272-5200-44c6-9885-bd2fad2925ed
  └─vg_external-lv_home
        xfs   1.0         1170d3ca-f387-47e2-9d94-9d41374a51e9

If needed load LVM Kernel Modules because on some live environments or half Linux systems,   
the dm-mod module might not load automatically.
sudo modprobe dm-mod

Scan for Physical Volumes
sudo pvscan

This will finds all physical volume that are part of LVM.
Scan and Activate Volume Groups:
sudo vgscan
sudo vgchange -ay    (LVM needs to be activated in order to use LVM's commands)

    
Use lvm's command to check the volume group (VG):
sudo vgs
Output:
 VG          #PV #LV #SN Attr   VSize  VFree
 vg_external   1   5   0 wz--n- <4.55t <3.77t     (In VG you can manage many parted disks. LVM manage partition disk similar to books. VG manage parted disk 
                                                   similar to pages. Here we have one partition named vg_external, but think, we have one book with a title)

And use lvm's command to check the the Logical Volume (LV)
sudo lvs
Output:
 LV      VG          Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  lv_home vg_external -wi-a----- 600.00g            (Notice how each LV or parted disk such as lv_home,  
  lv_root vg_external -wi-a-----  50.00g             lv_root, lv_swap, etc, belongs to the same VG or partition disk.
  lv_swap vg_external -wi-a-----  10.00g             Similar to chapter title pages in the same book. We have now finished 
  lv_tmp  vg_external -wi-a-----  50.00g             customizing our filesystem (FS))
  lv_var  vg_external -wi-a-----  90.00g

!!!!!!!!!!!You want to create just install Rocky Linux or you want to manully create partition and   
           filesystem type use durning installion. If you already create partition and filesystem,  
           please continue below as well.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Download Operating System of your choice to your C: drive downloads. I am installing Rocky Linux:
(https://rockylinux.org/download)
In the Rocky Linux download page, look for:
Rocky-10.x-x86_64-dvd.iso           (This is my ISO file)
And download: CHECKSUM.ios   

Verify the integrity and authenticity of the ISO file you just downloaded  
before you burn ISO to a USB flash drive using the installer (Balena Etche):  
grep '<NAME-OF-YOUR-ISO-FILE->' CHECKSUM | sha256sum -c -

Download a software tool to write the ISO as a bootable USB stick
I am using Balena Etcher:
Download: https://balena.io/etcher

Open a terminal and execute these command on the balenaEtcher file just downloaded:
Make Balena Etcher executable:
chmod +x balenaEtcher-<YOUR VERSION>.Setup.exe  (My version is: balenaEtcher-2.1.2.Setup.exe)

Run it:
./balenaEtcher-<YOUR VERSION>.Setup.exe           

Open balenaEtcher:
Select the OS of your choice: Rocky-10.4-x86_64-dvd.iso
Choose your USB stick (NOT your external HD):
Click on Flash

Install Linux OS from USB stick to external HD:
But first...
Note on Bootloader Installation: (Understand the install processes)
When you get to the installation summary screen in Anaconda:
Go to "Installation Destination"
Select your external hard drive (deselect internal if necessary)
Click "Custom" for custom partitioning
Also check the: Full Disk Summary and Bootloader: link 
to ensure GRUB is installed to the external hard drive (like /dev/sdc or /dev/sdx), 
and not install to your internal disk.

Now let your computer bootup. 
We have to boot Rocky 10 into the Anaconda installer (via USB stick).
In the Anaconda installer, select your external hard drive (/dev/sdx) as the installation target.
How to Access the Installation Summary Screen:
Boot from your Rocky Linux USB/ISO
Choose “Install Rocky Linux 10.0”
It will start the Anaconda installer
After language selection, you’ll reach the Installation Summary screen
Here you can configure:
Installation Destination (select external disk)
Custom partitioning   (Select the partitioning we created)
Network settings
Bootloader installation location (under Full Disk Summary and Bootloader)

Finish Installation:
Continue with the rest of the installation steps (package selection, etc.)
Once done: Reboot the system.

And congratulations because you have maually partitioned and 
configured a OS filesystem and installed a Linux OS!!!! 


